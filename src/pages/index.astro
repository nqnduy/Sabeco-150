---
import { getImage, Image } from 'astro:assets';
import FormField from '../components/FormField.astro';
import Layout from '../layouts/Layout.astro';
import Background from '~/assets/images/background.jpg';
import Tagline from '~/assets/images/tagline.png';
import Bottle from '~/assets/images/chai.png';
import Can from '~/assets/images/lon.png';
import Fermen from '~/assets/images/fermen.png';
import ProductName from '~/assets/images/title.svg';

let data = [
	{
		name: "Đánh giá tổng quan",
		question: {
			vi: "Vui lòng cân nhắc hết tất cả yếu tố MÀU SẮC, BỌT, .V… thì mức độ thích hay không thích NÓI CHUNG của bạn đối với sản phẩm bia mà bạn vừa thử là như thế nào?",
			en: "What is your overall liking of this beer? Please consider about all sensories: COLOR, FOAM, ETC of this beer."
		},
		choice: [0, 10]
	},
	{
		name: "Đánh giá mùi vị",
		question: {
			vi: "Mức độ thích hay không thích nói chung của bạn đối với MÙI VỊ của bia này là như thế nào?",
			en: "How much do you like the SMELL & TASTE of this beer?"
		},
		choice: [0, 10]
	},
	{
		name: "Đánh giá mức độ dễ uống",
		question: {
			vi: "Xin cho biết bạn đánh giá thế nào về MỨC ĐỘ DỄ UỐNG của sản phẩm bia này?",
			en: "Please let us know your opinions about how EASY TO DRINK of this beer product?"
		},
		choice: [1, 5]
	},
	{
		name: "Ghi nhận cách thức sử dụng",
		question: {
			vi: "Hãy cho chúng tôi biết bạn thường sử dụng sản phẩm như thế nào?",
			en: "Please tell us how you usually use the product?"
		},
		choice: [1, 5]
	},
	{
		name: "Đánh giá bao bì",
		question: {
			vi: "Bạn hãy quan sát kỹ BAO BÌ của sản phẩm ở dạng CHAI & LON 330ml vui lòng cho biết mức độ bạn thích hay không thích của bạn?",
			en: "Please look carefully at the PACKAGING of the product in 330ml BOTTLES & CANS."
		},
		choice: [0, 10]
	},
]

const BG = await getImage({ src: Background, format: 'jpg' });
const TagLineImg = await getImage({ src: Tagline, format: 'png' })
const BottleImg = await getImage({ src: Bottle, format: 'png' });
const CanImg = await getImage({ src: Can, format: 'png' });
const FermenImg = await getImage({ src: Fermen, format: 'png' });
---
<Layout title="Welcome to Astro.">
	<main>
		<body>
			<div class="wrapper"
				style={{ backgroundImage: `url('${BG.src}')` }}
			>
				<div class="wrapper-inner" data-curr-step={2}>
					<div class="first-screen" data-step={1}>
						<div class="container">
							<div class="first-screen-wrap">
								<div class="tagline">
									<Image
										src={TagLineImg.src}
										alt=	{'title'}
										width={545}
										height={238}
										class="img"
									/>
								</div>
								<div class="btn-start">
									<span>Khảo sát ngay</span>
									<div class="btn-start-ic">
										<svg width="100%" viewBox="0 0 41 41" fill="none" xmlns="http://www.w3.org/2000/svg">
											<rect x="0.366943" y="0.559631" width="39.8807" height="39.8807" rx="19.9404" fill="white"/>
											<g clip-path="url(#clip0_57_944)">
											<path d="M22.6542 15.5522C22.4907 15.3943 22.2717 15.3069 22.0444 15.3089C21.817 15.3108 21.5996 15.402 21.4389 15.5628C21.2781 15.7235 21.1869 15.9409 21.185 16.1683C21.183 16.3956 21.2704 16.6146 21.4283 16.7781L24.2832 19.633H14.2385C14.0086 19.633 13.788 19.7244 13.6255 19.887C13.4629 20.0496 13.3715 20.2701 13.3715 20.5C13.3715 20.7299 13.4629 20.9505 13.6255 21.113C13.788 21.2756 14.0086 21.367 14.2385 21.367H24.2832L21.4283 24.2219C21.3455 24.3019 21.2794 24.3976 21.234 24.5033C21.1886 24.6091 21.1647 24.7229 21.1637 24.838C21.1627 24.9531 21.1846 25.0673 21.2282 25.1738C21.2718 25.2804 21.3361 25.3772 21.4176 25.4586C21.499 25.54 21.5958 25.6043 21.7023 25.6479C21.8088 25.6915 21.923 25.7135 22.0381 25.7125C22.1532 25.7115 22.267 25.6875 22.3728 25.6421C22.4786 25.5967 22.5742 25.5306 22.6542 25.4478L26.9891 21.113C27.1516 20.9504 27.2429 20.7299 27.2429 20.5C27.2429 20.2701 27.1516 20.0496 26.9891 19.8871L22.6542 15.5522Z" fill="#D00F40"/>
											</g>
											<defs>
											<clipPath id="clip0_57_944">
											<rect width="13.8716" height="13.8716" fill="white" transform="translate(13.3715 13.5642)"/>
											</clipPath>
											</defs>
										</svg>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="form">
						<div class="container">
							<div class="nav">
								<span class="nav-item active"></span>
								<span class="nav-item"></span>
								<span class="nav-item"></span>
								<span class="nav-item"></span>
								<span class="nav-item"></span>
								<span class="nav-item"></span>
							</div>
						</div>
						<form class="form-inner" id="form" autocomplete="off">
							<div class="second-screen" data-step={2}>
								<div class="container">
									<div class="second-screen-wrap">
										<div class="infor-title">
											<span class="vi">Thông tin khách hàng</span>
											<span class="en">Customer information</span>
										</div>
										<div class="infor-content">
											<div class="infor-content-wrap">
												<div class="input-field name">
													<label for='name'>Họ và tên <span class="italic">/ Full name</span></label>
													<input type='text' name='Tên' placeholder="Nguyen Van A" autocomplete="off"/>
												</div>
												<div class="input-field age">
													<label for='age'>Tuổi <span class="italic">/ Age</span></label>
													<input type='number' name='Tuổi' placeholder="24" autocomplete="off"/>
												</div>
											</div>
											<div class="input-field gender">
												<label for='gender'>Giới tính <span class="italic">/ Gender</span></label>
												<div class="input-radio-wrap">
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value='Nam' />
														<span class="fake-radio"></span>
														<label for='gender'>Nam <span class="italic">/ Male</span></label>
													</div>
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value="Nữ" />
														<span class="fake-radio"></span>
														<label for='gender'>Nữ <span class="italic">/ Female</span></label>
													</div>
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value="Khác" />
														<span class="fake-radio"></span>
														<label for='gender'>Khác <span class="italic">/ Other</span></label>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="third-screen" data-step={3}>
								<div class="container">
									<div class="third-screen-wrap">
										<div class="form-field">
											<div class="form-field-ques">
												{data[0].question.vi}
												<div class="italic">{data[0].question.en}</div>
											</div>
											<div class="form-field-choice">
												<div class="form-field-choice-listing">
													{[...Array(11)].map((_, idx) => (
														<div class="form-field-choice-item">
															<input type="radio" name={data[0].name} value={idx} />
															<label for={`quest_1_${idx}`}>{idx}</label>
														</div>
													))}
												</div>
												<div class="form-field-choice-desc">
													<div class="form-field-choice-desc-txt"><span>Cực kỳ không thích</span><span class="italic">Dislike extremely</span></div>
													<div class="form-field-choice-desc-txt"><span>Cực kỳ thích</span><span class="italic">Like extremely</span></div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="fourth-screen" data-step={4}>
								<div class="container">
									<div class="fourth-screen-wrap">
										<div class="form-field">
											<div class="form-field-ques">
												{data[1].question.vi}
												<div class="italic">{data[1].question.en}</div>
											</div>
											<div class="form-field-choice">
												<div class="form-field-choice-listing">
													{[...Array(11)].map((_, idx) => (
														<div class="form-field-choice-item">
															<input type="radio" name={data[1].name} value={idx} />
															<label for={`quest_2_${idx}`}>{idx}</label>
														</div>
													))}
												</div>
												<div class="form-field-choice-desc">
													<div class="form-field-choice-desc-txt"><span>Cực kỳ không thích</span><span class="italic">Dislike extremely</span></div>
													<div class="form-field-choice-desc-txt"><span>Cực kỳ thích</span><span class="italic">Like extremely</span></div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="fifth-screen" data-step={5}>
								<div class="container">
									<div class="fifth-screen-wrap">
										<div class="form-field">
											<div class="form-field-ques">
												{data[2].question.vi}
												<div class="italic">{data[2].question.en}</div>
											</div>
											<div class="form-field-choice">
												<div class="form-field-choice-listing mod-txt">
													<div class="form-field-choice-item mod-txt">
														<input type="radio" name={data[2].name} value={1} />
														<label for={`quest_3_1`}>1</label><span>Rất không dễ uống <span class="italic">/ Not easy to drink at all</span></span>
													</div>
													<div class="form-field-choice-item mod-txt">
														<input type="radio" name={data[2].name} value={2} />
														<label for={`quest_3_2`}>2</label><span>Hơi không dễ uống <span class="italic">/ Quite not easy to drink</span></span>
													</div>
													<div class="form-field-choice-item mod-txt">
														<input type="radio" name={data[2].name} value={3} />
														<label for={`quest_3_3`}>3</label><span>Bình thường <span class="italic">/ Normal</span></span>
													</div>
													<div class="form-field-choice-item mod-txt">
														<input type="radio" name={data[2].name} value={4} />
														<label for={`quest_3_4`}>4</label><span>Hơi dễ uống <span class="italic">/ Quite easy to drink</span></span>
													</div>
													<div class="form-field-choice-item mod-txt">
														<input type="radio" name={data[2].name} value={5} />
														<label for={`quest_3_5`}>5</label><span>Rất dễ uống <span class="italic">/ Extremely easy to drink</span></span>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="sixth-screen" data-step={6}>
								<div class="container">
									<div class="sixth-screen-wrap">
										<div class="form-field">
											<div class="form-field-ques">
												{data[3].question.vi}
												<div class="italic">{data[3].question.en}</div>
											</div>
											<div class="form-field-choice">
												<div class="form-field-choice-desc">
													<div class="form-field-choice-desc-txt"><span>Uống sản phẩm</span><span class="italic">Drink it</span></div>
												</div>
												<div class="form-field-choice-listing mod-grid">
													<div class="form-field-choice-item mod-grid">
														<input type="radio" name={data[2].name} value={1} />
														<label for={`quest_4_1`}><span>ở nhiệt độ thường, không đá</span><span class="italic">at room temperature without ice</span></label>
													</div>
													<div class="form-field-choice-item mod-grid">
														<input type="radio" name={data[2].name} value={2} />
														<label for={`quest_4_2`}><span>ở nhiệt độ thường, có đá</span><span class="italic">at room temperature with ice</span></label>
													</div>
													<div class="form-field-choice-item mod-grid">
														<input type="radio" name={data[2].name} value={3} />
														<label for={`quest_4_3`}><span>đã được ướp lạnh, không đá</span><span class="italic">when it is chilled without ice</span></label>
													</div>
													<div class="form-field-choice-item mod-grid">
														<input type="radio" name={data[2].name} value={4} />
														<label for={`quest_4_4`}><span>đã được ướp lạnh, có đá</span><span class="italic">when it is chilled with ice</span></label>
													</div>
													<div class="form-field-choice-item mod-grid">
														<input type="radio" name={data[2].name} value={5} />
														<label for={`quest_4_4`}><span>pha với sản phẩm khác</span><span class="italic">mix with other products</span></label>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="seventh-screen" data-step={7}>
								<div class="container">
									<div class="seventh-screen-wrap">
										<div class="form-field">
											<div class="form-field-ques">
												{data[4].question.vi}
												<div class="italic">{data[4].question.en}</div>
											</div>
											<div class="form-field-choice">
												<div class="form-field-choice-listing">
													{[...Array(11)].map((_, idx) => (
														<div class="form-field-choice-item">
															<input type="radio" name={data[4].name} value={idx} />
															<label for={`quest_5_${idx}`}>{idx}</label>
														</div>
													))}
												</div>
												<div class="form-field-choice-desc">
													<div class="form-field-choice-desc-txt"><span>Cực kỳ không thích</span><span class="italic">Dislike extremely</span></div>
													<div class="form-field-choice-desc-txt"><span>Cực kỳ thích</span><span class="italic">Like extremely</span></div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</form>
						<div class="container">
							<div class="form-control">
								<div class="form-control-prev">
									<span>Quay lại</span>
									<span class="italic">Previous</span>
								</div>
								<div class="form-control-next">
									<div>
										<span data-text-vi>Tiếp tục</span>
										<span class="italic" data-text-en>Next</span>
									</div>
									<button id='submit' type="submit"></button>
								</div>
							</div>
						</div>
					</div>
					<div class="last-screen" data-step={8}>
						<div class="container">
							<div class="last-screen-title">
								<span class="last-screen-title-txt">Cảm ơn bạn<br/>đã thực hiện đánh giá!</span>
								<span class="last-screen-title-txt italic">Thank you for helping us with the survey!</span>
							</div>
						</div>
					</div>
					<div class="main-image-wrap">
						<div class="bottle-img">
							<Image
								src={BottleImg.src}
								alt=""
								width={510}
								height={900}
								class="img img-h"
							/>
						</div>
						<div class="can-img">
							<Image
								src={CanImg.src}
								alt=""
								width={426}
								height={604}
								class="img img-h"
							/>
						</div>
						<div class="fermen-img">
							<Image
								src={FermenImg.src}
								alt=""
								width={253}
								height={165}
								class="img"
							/>
						</div>
						<div class="productName-img">
							<Image
								src={ProductName}
								alt=""
								width={933}
								height={243}
								class="img"
							/>
						</div>
					</div>
				</div>
				<!-- <div class="form">
					<form id="form">
						<label for='name'>Tên</label>
						<input type='text' name='Tên' />
						<br/>
						<label for='age'>Tuổi</label>
						<input type='text' name='Tuổi' />
						<br/>
						<label for='gender'>Giới tính</label>
						<input type='radio' name='Giới tính' value='Nam' />
						<label for='gender'>Nam</label>
						<input type='radio' name='Giới tính' value="Nữ" />
						<label for='gender'>Nữ</label>
						<input type='radio' name='Giới tính' value="Khác" />
						<label for='gender'>Khác</label>
						{data.map((el) => <FormField {...el} />)}

						<button id='submit' type="submit">Submit</button>
					</form>
				</div> -->
			</div>
		</body>
	</main>
</Layout>

<style lang="scss">
	.form {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-inner {
			display: grid;
			grid-template-columns: 1fr;
		}
	}
	.wrapper {
		position: relative;
		width: 100%;
		height: 100vh;
		background-repeat: no-repeat;
		background-size: cover;
		background-position: center;
		overflow: hidden;
		&-inner {
			width: 100%;
			height: 100%;
			display: grid;
			grid-template-columns: 1fr;
			&.move-step {
				.fermen-img {
					opacity: 0;
					transform: translateY(1rem);
				}
				.bottle-img,
				.can-img {
					transform: translate(-10rem);
				}
			}
		}
	}
	.nav {
		padding-top: 5rem;
		display: flex;
		gap: 0 .8rem;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-item {
			height: .3rem;
			background-color: var(--cl-white);
			flex: 1;
			border-radius: 100vmax;
			opacity: .4;
			transition: opacity .4s ease-in-out;
			&.active {
				opacity: 1;
			}
		}
	}
	.first-screen {
		position: relative;
		z-index: 3;
		width: 100%;
		height: 100%;
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-wrap {
			padding-top: 10.46svh;
			display: flex;
			flex-direction: column;
			align-items: center;
			height: 100%;
		}
	}
	.tagline {
		width: 54.55rem;
		margin-bottom: 7.45svh;
	}
	.btn-start {
		background-color: var(--cl-dm-bg);
		font-size: 2.5rem;
		padding: 1.2rem 1.2rem 1.2rem 2.4rem;
		border-radius: 100vmax;
		cursor: pointer;
		display: flex;
		align-items: center;
		gap: 0 1.2rem;
		&-ic {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 4rem;
		}
	}
	.main-image-wrap {
		grid-area: 1/1/2/2;
		align-self: end;
		display: grid;
		grid-template-columns: 1fr;
		pointer-events: none;
		user-select: none;
	}
	.bottle-img {
		position: relative;
		z-index: 3;
		height: 75.37svh;
		margin-bottom: -14.74svh;
		margin-left: 6.2rem;
		grid-area: 1/1/2/2;
		align-self: end;
		transition: transform 1.2s ease-in-out;
		justify-self: start;
	}
	.can-img {
		position: relative;
		z-index: 2;
		grid-area: 1/1/2/2;
		height: 50.58svh;
		margin-bottom: -6.95svh;
		align-self: end;
		margin-left: 29.3rem;
		transition: transform 1.2s ease-in-out .1s;
		justify-self: start;
	}
	.fermen-img {
		position: relative;
		z-index: 1;
		grid-area: 1/1/2/2;
		width: 25.3rem;
		height: 16.5rem;
		justify-self: center;
		align-self: end;
		margin-bottom: 34.84svh;
		transition: all 1.2s ease-in-out;
	}
	.productName-img {
		position: relative;
		z-index: 0;
		grid-area: 1/1/2/2;
		align-self: end;
		margin-inline: -5rem;
	}
	.second-screen {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&-wrap {
			padding-top: 4rem;
		}
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
	}
	.infor-title {
		color: black;
		display: flex;
		flex-direction: column;
		margin-bottom: 3.2rem;
		.vi {
			font-size: 4.8rem;
			font-weight: 700;
			line-height: 1em;
		}
		.en {
			font-size: 2.4rem;
			font-weight: 500;
			line-height: 1.6em;
		}
	}
	.infor-content {
		display: flex;
		flex-direction: column;
		gap: 4rem 0;
		&-wrap {
			display: flex;
			gap: 0 1.2rem;
		}
	}
	.input-field {
		color: black;
		display: flex;
		flex-direction: column;
		gap: 1.2rem 0;
		label {
			font-weight: 600;
			font-size: 2.244rem;
			span {
				font-weight: 400;
			}
		}
		input {
			padding: 2.24rem;
			border-radius: 100vmax;
			background-color: var(--cl-dm-bg);
			border: none;
			font-size: 2.525rem;
			&::placeholder {
				color: rgba(255, 255, 255, .25);
			}
		}
		&.name {
			flex: 1;
		}
		&.age {
			width: 20rem;
		}
	}
	.input-radio {
		&-field {
			position: relative;
			display: flex;
			align-items: center;
			gap: 0 1.6rem;
			input:checked ~ .fake-radio:before {
				opacity: 1;
				transform: scale(1);
			}
			.fake-radio {
				position: relative;
				width: 2rem;
				height: 2rem;
				border-radius: 50%;
				border: 3px solid black;
				display: flex;
				align-items: center;
				justify-content: center;
				pointer-events: none;
				&:before {
					content: '';
					position: absolute;
					width: 1rem;
					height: 1rem;
					background: var(--cl-primary);
					border-radius: 50%;
					opacity: 0;
					transform: scale(0);
					transition: all .4s ease-in-out;
				}
			}
			input {
				position: absolute;
				width: 100%;
				height: 100%;
				padding: 0;
				outline: none;
				margin: 0;
				opacity: 0;
			}
			label {
				font-size: 2.525rem;
				pointer-events: none;
			}
		}
	}
	.input-radio-wrap {
		display: flex;
		gap: 0 4.5rem;
	}
	.form-field  {
		margin-top: 7rem;
		padding-inline: 1.2rem;
		display: flex;
		flex-direction: column;
		align-items: center;
		&-ques {
			padding: 2.5rem 3rem;
			background-color: var(--cl-dm-bg);
			border-radius: 2.4rem;
			font-size: 2rem;
			line-height: 1.4em;
			letter-spacing: -.01em;
			font-weight: 600;
			margin-bottom: 6rem;
			.italic {
				font-weight: 400;
				margin-top: 1em;
			}
		}
		&-choice {
			&-listing {
				display: flex;
				align-items: center;
				gap: 0 .8rem;
				margin-bottom: 1.6rem;
				&.mod-txt {
					flex-direction: column;
					gap: .8rem 0;
				}
				&.mod-grid {
					display: grid;
					grid-template-columns: 1fr 1fr;
					gap: 2rem;
					margin-top: 1.4rem;
				}
			}

			&-item {
				position: relative;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: var(--cl-dm-bg);
				border-radius: 50%;
				input {
					position: absolute;
					width: 100%;
					height: 100%;
					margin: 0;
					opacity: 0;
					&:checked ~ label {
						background-color: var(--cl-primary);
					}
				}
				label {
					font-size: 1.4rem;
					font-weight: 600;
					pointer-events: none;
					width: 4.8rem;
					height: 4.8rem;
					text-align: center;
					position: relative;
					display: flex;
					justify-content: center;
					align-items: center;
					border-radius: 50%;
					transition: background-color .4s ease-in-out;
					&:before {
						content: '';
						position: absolute;
						width: 50%;
						height: 50%;
						border: 2px solid var(--cl-white);
						border-radius: 50%;
					}
				}
				&.mod-txt {
					border-radius: 100vmax;
					align-self: stretch;
					justify-content: start;
					span {
						padding-block: 1.2rem;
						font-size: 1.6rem;
						font-weight: 600;
						margin-left: -4.8rem;
						padding-left: 4.8rem;
						transition: background-color .3s ease-in-out;
						flex: 1;
						border-radius: 100vmax;
						.italic {
							font-weight: 400;
							padding-right: 1.6rem;
						}
					}
					input:checked ~ span {
						background-color: var(--cl-primary);
					}
					label {
						// width: 2.4rem;
						// height: 100%;
					}
					&:before {
						display: none;
					}
				}
				&.mod-grid {
					width: auto;
					height: auto;
					border-radius: 2rem;

					label {
						width: 100%;
						height: 100%;
						display: flex;
						flex-direction: column;
						align-items: start;
						font-size: 1.8rem;
						padding: 2rem 2rem;
						border-radius: 2rem;
						.italic {
							font-weight: 400;
						}
						&:before {
							display: none;
						}
					}
					&:last-child {
						grid-column: 2/3;
					}
				}
			}
			&-desc {
				display: flex;
				justify-content: space-between;

				&-txt {
					font-size: 1.4rem;
					line-height: 1.3em;
					font-weight: 600;
					display: flex;
					flex-direction: column;
					color: black;
					.italic {
						font-weight: 400;
					}
					&:nth-child(2) {
						align-items: end;
					}
				}
			}
		}
	}
	.third-screen {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
	}
	.fourth-screen {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
	}
	.fifth-screen {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
	}
	.sixth-screen {
		opacity: 0;
		pointer-events: none;
		grid-area: 1/1/2/2;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}

		.form-field-ques {
			margin-bottom: 3rem;
		}
		.form-field-choice {
			&-desc-txt {
				font-size: 1.8rem;
				line-height: 1.2em;
			}
		}
	}
	.seventh-screen {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
	}
	.last-screen {
		grid-area: 1/1/2/2;
		padding-top: 14.6rem;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-title {
			font-size: 5rem;
			font-weight: 600;
			line-height: 1.4em;
			letter-spacing: -.001em;
			background-color: var(--cl-dm-bg);
			display: flex;
			flex-direction: column;
			padding: 4.4rem 3rem;
			text-align: center;
			border-radius: 2.4rem;
			&-txt.italic {
				font-size: 2.4rem;
				font-weight: 400;
			}
		}
	}
	.form-control {
		display: flex;
		justify-content: end;
		gap: 0 .8rem;
		opacity: 0;
		pointer-events: none;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-prev {
			display: flex;
			flex-direction: column;
			font-size: 1.5rem;
			font-weight: 600;
			padding: 1rem;
			color: #000;
			.italic {
				font-weight: 400;
			}
		}
		&-next {

			font-size: 1.5rem;
			font-weight: 600;
			color: var(--cl-white);
			background-color: #242223;
			padding: 1rem;
			border-radius: 1.2rem;
			position: relative;
			> div {
				display: flex;
				flex-direction: column;
			}
			#submit {
				position: absolute;
				width: 100%;
				height: 100%;
				top: 0;
				left: 0;
				opacity: 0;
				pointer-events: none;
				z-index: 2;
			}
			&.submit {
				pointer-events: auto;
			}
			.italic {
				font-weight: 400;
			}
		}
	}
</style>

<script is:inline>
	const DEPLOYMENTURI = 'AKfycbwMMn9IcfgBaOS1NdFFHHqmV7o6w1YsVg8mu3ho5AVxU_EyQjSU5f9O_80YwfW8hSsHsQ';
	const form = document.querySelector("#form");
	const submitButton = document.querySelector("#submit");
	// form.addEventListener('submit', e => {
	// 	submitButton.disabled = true

	// 	let requestBody = new FormData(form)

	// 	e.preventDefault();

	// 	fetch(SHEET_URL, { method: 'POST', body: requestBody })
	// 	.then(res => {
	// 		alert('Success!', res);
	// 		submitButton.disabled = false;
	// 	})
	// 	.catch(error => {
	// 		alert('Error!', error.message);
	// 		submitButton.disabled = false;
	// 	})
	// })

	form?.addEventListener("submit", async function(event) {
		event.preventDefault();
		const formData = new FormData(form);
		console.log(formData)
		const data = Object.fromEntries(formData);
		// submitButton.disabled = true;

		try {
			const response = await fetch(`https://script.google.com/macros/s/${DEPLOYMENTURI}/exec`, {
				method: "POST",
				body: new URLSearchParams(data)
			});
			const responseText = await response.text();
			alert(responseText);
			// submitButton.disabled = false;
			form.reset();
		}
		catch (error) {
			alert(error);
			// submitButton.disabled = false;
		}
	});

	let currStep = 1;
	const updateScreen = () => {
		// let currStep = document.querySelector('[data-curr-step]').getAttribute('data-curr-step');
		document.querySelectorAll('[data-step]').forEach(step => {
			if (step.getAttribute('data-step') == currStep) {
				step.classList.add('active');
			}
			else {
				step.classList.remove('active');
			}
		})
		document.querySelector('.wrapper-inner').classList[(currStep == 1 || currStep == 8) ? 'remove' : 'add']('move-step');
		document.querySelector('.nav').classList[(currStep == 1 || currStep == 8) ? 'remove' : 'add']('active');
		document.querySelector('.form-control').classList[(currStep == 1 || currStep == 8) ? 'remove' : 'add']('active');
		document.querySelectorAll('.nav-item').forEach((el, idx) => {
			if (idx == currStep - 2) {
				el.classList.add('active');
			}
			else {
				el.classList.remove('active');
			}
		})

		document.querySelector('.form-control-next [data-text-vi]').innerHTML = (currStep < 7) ? 'Tiếp tục' : 'Hoàn thành';
		document.querySelector('.form-control-next [data-text-en]').innerHTML = (currStep < 7) ? 'Next' : 'Done';
		document.querySelector('.form-control-next').classList[(currStep < 7) ? 'remove' : 'add']('submit')

		document.querySelector('.form').classList[(currStep == 1 || currStep == 8) ? 'remove' : 'add']('active')
	}
	updateScreen();
	document.querySelector('.btn-start').addEventListener('click', function (e) {
		if (currStep > 1) return;
		e.preventDefault();
		currStep++;
		updateScreen();
	})

	document.querySelector('.form-control-next').addEventListener('click', function(e) {
		if (currStep >= 8) return;
		e.preventDefault();
		currStep++;
		updateScreen();
	})
</script>
