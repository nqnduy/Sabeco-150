---
import { getImage, Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import Tagline from '~/assets/images/tagline.png';
import SabecoLogo from '~/assets/images/sabeco.png';
import Logo150 from '~/assets/images/150logo.png';
import BG from '~/assets/images/bg.jpg';
import Disclamer from '~/assets/images/disclamer.png';

const TagLineImg = await getImage({ src: Tagline, format: 'png' })
const SabecoLogoImg = await getImage({ src: SabecoLogo, format: 'png' });
const Logo150Img = await getImage({ src: Logo150, format: 'png' });
const DisclamerImg = await getImage({ src: Disclamer, format: 'png' });
const BgImg = await getImage({ src: BG, format: 'jpg' });
---
<Layout title="Sabeco Hành Trình Di Sản">
	<main>
		<body>
			<div class="wrapper">
				<div class="wrapper-inner">
					<div class="first-screen step-item active" data-step={1}>
						<div class="container">
							<div class="first-screen-wrap">
								<div class="first-screen-head">
									<div class="first-screen-img">
										<Image
											src={SabecoLogoImg.src}
											alt=""
											width={620}
											height={617}
											class="img"
										/>
									</div>
									<div class="first-screen-img">
										<Image
											src={Logo150Img.src}
											alt=""
											width={445}
											height={362}
											class="img"
										/>
									</div>
								</div>
								<div class="first-screen-title">
									<Image
										src={TagLineImg.src}
										alt=""
										width={1920}
										height={263}
										class="img"
									/>
								</div>
								<div class="btn-start">
									<span>Bắt đầu</span>
									<div class="btn-start-ic">
										<svg width="100%" viewBox="0 0 41 41" fill="none" xmlns="http://www.w3.org/2000/svg">
											<rect x="0.366943" y="0.559631" width="39.8807" height="39.8807" rx="19.9404" fill="white"/>
											<g clip-path="url(#clip0_57_944)">
											<path d="M22.6542 15.5522C22.4907 15.3943 22.2717 15.3069 22.0444 15.3089C21.817 15.3108 21.5996 15.402 21.4389 15.5628C21.2781 15.7235 21.1869 15.9409 21.185 16.1683C21.183 16.3956 21.2704 16.6146 21.4283 16.7781L24.2832 19.633H14.2385C14.0086 19.633 13.788 19.7244 13.6255 19.887C13.4629 20.0496 13.3715 20.2701 13.3715 20.5C13.3715 20.7299 13.4629 20.9505 13.6255 21.113C13.788 21.2756 14.0086 21.367 14.2385 21.367H24.2832L21.4283 24.2219C21.3455 24.3019 21.2794 24.3976 21.234 24.5033C21.1886 24.6091 21.1647 24.7229 21.1637 24.838C21.1627 24.9531 21.1846 25.0673 21.2282 25.1738C21.2718 25.2804 21.3361 25.3772 21.4176 25.4586C21.499 25.54 21.5958 25.6043 21.7023 25.6479C21.8088 25.6915 21.923 25.7135 22.0381 25.7125C22.1532 25.7115 22.267 25.6875 22.3728 25.6421C22.4786 25.5967 22.5742 25.5306 22.6542 25.4478L26.9891 21.113C27.1516 20.9504 27.2429 20.7299 27.2429 20.5C27.2429 20.2701 27.1516 20.0496 26.9891 19.8871L22.6542 15.5522Z" fill="#D00F40"/>
											</g>
											<defs>
											<clipPath id="clip0_57_944">
											<rect width="13.8716" height="13.8716" fill="white" transform="translate(13.3715 13.5642)"/>
											</clipPath>
											</defs>
										</svg>
									</div>
								</div>
							</div>
						</div>
					</div>
					<form class="form" id="form" autocomplete="off">
						<div class="form-inner">
							<div class="second-screen step-item" data-step={2}>
								<div class="container">
									<div class="second-screen-head">
											<div class="second-screen-img">
											<Image
												src={SabecoLogoImg.src}
												alt=""
												width={620}
												height={617}
												class="img"
											/>
										</div>
										<div class="second-screen-img">
											<Image
												src={Logo150Img.src}
												alt=""
												width={445}
												height={362}
												class="img"
											/>
										</div>
									</div>
									<div class="second-screen-wrap">
										<div class="infor-title">
											<span class="vi">Thông tin khách hàng</span>
										</div>
										<div class="infor-content">
											<div class="infor-content-wrap">
												<div class="input-field name">
													<label for='name'>Họ và tên</label>
													<input type='text' name='Tên' placeholder="Nguyen Van A" autocomplete="off" required/>
												</div>
												<div class="input-field age">
													<label for='age'>Tuổi</label>
													<input type='number' name='Tuổi' placeholder="18" autocomplete="off" min="18" max="100" required/>
												</div>
											</div>
											<div class="input-field gender">
												<label for='gender'>Giới tính</label>
												<div class="input-radio-wrap">
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value='Nam' required/>
														<span class="fake-radio"></span>
														<label for='gender'>Nam</label>
													</div>
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value="Nữ" />
														<span class="fake-radio"></span>
														<label for='gender'>Nữ</label>
													</div>
													<div class="input-radio-field">
														<input type='radio' name='Giới tính' value="Khác" />
														<span class="fake-radio"></span>
														<label for='gender'>Khác</label>
													</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<button id='submit' type="submit" class="btn-submit">
								<span>Xác nhận thông tin</span>
							</button>
						</div>
					</form>
					<div class="third-screen step-item" data-step={3}>
						<div class="container">
							<div class="third-screen-head">
								<div class="third-screen-img">
									<Image
										src={SabecoLogoImg.src}
										alt=""
										width={620}
										height={617}
										class="img"
									/>
								</div>
								<div class="third-screen-img">
									<Image
										src={Logo150Img.src}
										alt=""
										width={445}
										height={362}
										class="img"
									/>
								</div>
							</div>
							<div class="third-screen-wrap">
								<div class="third-screen-ques">Năm nào SABECO bắt đầu hành trình của mình, như được hiển thị trên dòng thời gian trên xe?</div>
								<div class="third-screen-ans">
									<ol>
										<li>Công nghệ lên men nhanh</li>
										<li>Công nghệ lọc lạnh -2°C</li>
										<li>Công nghệ nấu bia thủ công</li>
									</ol>
								</div>
							</div>
						</div>
					</div>
					<div class="last-screen step-item" data-step={4}>
						<div class="container">
							<div class="last-screen-head">
								<div class="last-screen-img">
									<Image
										src={SabecoLogoImg.src}
										alt=""
										width={620}
										height={617}
										class="img"
									/>
								</div>
								<div class="last-screen-img">
									<Image
										src={Logo150Img.src}
										alt=""
										width={445}
										height={362}
										class="img"
									/>
								</div>
							</div>
							<div class="last-screen-wrap">
								<div class="last-screen-title">
									<span class="last-screen-title-txt">Cảm ơn bạn<br/>đã thực hiện đánh giá!</span>
								</div>
							</div>
						</div>
					</div>
					<div class="main-image-wrap">
						<div class="bg-bot">
							<Image
								src={BgImg.src}
								alt=""
								width={1920}
								height={1447}
								class="img"
							/>
						</div>
						<div class="disclamer">
							<Image
								src={DisclamerImg.src}
								alt=""
								width={2044}
								height={89}
								class="img"
							/>
						</div>
					</div>
				</div>
			</div>
		</body>
	</main>
</Layout>

<style lang="scss">
	.form {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		position: relative;
		z-index: 2;
		&.active {
			opacity: 1;
			pointer-events: auto;
		}
		&-inner {
			display: grid;
			grid-template-columns: 1fr;
		}
	}
	.wrapper {
		position: relative;
		width: 100%;
		min-height: 100vh;
		overflow: hidden;
		background-color: #fff;
		display: flex;
		flex-direction: column;
		&-inner {
			flex: 1;
			width: 100%;
			height: 100%;
			display: grid;
			grid-template-columns: 1fr;
		}
	}
	.step-item {
		grid-area: 1/1/2/2;
		opacity: 0;
		pointer-events: none;
		display: none;
		&.active {
			display: block;
			opacity: 1;
			pointer-events: auto;
		}
	}
	.first-screen {
		position: relative;
		z-index: 3;
		width: 100%;
		height: 100%;
		&-wrap {
			padding-top: 8.46svh;
			display: flex;
			flex-direction: column;
			align-items: center;
			height: 100%;
		}
		&-head {
			display: flex;
			align-items: center;
		}
		&-img {
			&:first-child {
				width: 25rem;
				margin-left: -6rem;
			}
			&:last-child {
				width: 12rem;
				margin-left: -4rem;
			}
		}
		&-title {
			margin-top: -4rem;
			margin-bottom: 2rem;
		}
	}
	.btn-start {
		background-color: var(--cl-primary);
		font-size: 1.8rem;
		padding: .6rem .6rem .6rem 1.8rem;
		border-radius: 100vmax;
		cursor: pointer;
		display: flex;
		align-items: center;
		gap: 0 1.2rem;
		&-ic {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 3.2rem;
		}
	}
	.btn-submit {
		background-color: var(--cl-primary);
		font-size: 1.6rem;
		padding: 1.2rem 2.4rem 1.3rem;
		border-radius: 100vmax;
		border: none;
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		justify-self: center;
	}
	.main-image-wrap {
		grid-area: 2/1/3/2;
		align-self: end;
		display: grid;
		grid-template-columns: 1fr;
		pointer-events: none;
		user-select: none;
		position: relative;
		z-index: 1;
		margin-top: -50%;
		position: relative;
		display: flex;
		justify-content: center;
	}
	.disclamer {
		position: absolute;
		bottom: 1rem;
		width: 80%;
		background-color: white;
		padding: .4rem .6rem;
	}
	.second-screen {
		&-wrap {
			padding-top: 4rem;
			padding-bottom: 6rem;
		}
		&-head {
			display: flex;
			align-items: center;
			justify-content: center;
			margin-bottom: -2rem;
		}
		&-img {
			&:first-child {
				width: 18rem;
				margin-left: -4rem;
			}
			&:last-child {
				width: 8rem;
				margin-left: -2rem;
			}
		}
	}
	.third-screen {
		grid-area: 1/1/2/2;
		color: black;
		&-wrap {
			padding-top: 2rem;
			padding-bottom: 6rem;
		}
		&-head {
			display: flex;
			align-items: center;
			justify-content: center;
			margin-bottom: -2rem;
		}
		&-img {
			&:first-child {
				width: 18rem;
				margin-left: -4rem;
			}
			&:last-child {
				width: 8rem;
				margin-left: -2rem;
			}
		}
		&-ques {
			font-size: 2rem;
			font-weight: 600;
			letter-spacing: -.01em;
			line-height: 1.4;
		}
		&-ans {
			font-size: 1.8rem;
			font-weight: 400;
			line-height: 1.6em;
			margin-top: 2rem;
			ol {
				list-style: none;
				padding-left: 0;
				position: relative;
				display: flex;
				flex-direction: column;
				gap: 1rem;
			}
			li {
				padding-left: 3rem;
				position: relative;
				padding-block: 1.2rem;
				border-radius: .8rem;
				background-color: #dcd3d359;
				transition: all .4s ease;
				&[data-answer='true'] {
					// background-color: yellow;
				}
				@keyframes selected {
					0% {
						opacity: 1;
					}
					100% {
						opacity: .8;
					}
				}
				&.selected {
					background-color: var(--cl-primary);
					box-shadow: 0 0 0 0.4rem #e4090b80;
					color: var(--cl-white);
					animation: 0.5s linear 1s infinite alternate selected;
				}
				&.correct {
					background-color: #47d167;
					box-shadow: 0 0 0 0.4rem #47d16791;
					color: var(--cl-white);
					opacity: 1 !important;
					font-weight: 600;
					animation: none;
				}
				&.incorrect {
					opacity: .5;
					animation: none;
					pointer-events: none;
				}
				&::before {
					content: counter(list-item, upper-alpha) '.';
					font-weight: 600;
					position: absolute;
					left: 1rem;
				}
			}
		}
	}
	.infor-title {
		color: black;
		display: flex;
		flex-direction: column;
		margin-bottom: 3.2rem;
		.vi {
			font-size: 2.4rem;
			font-weight: 700;
			line-height: 1em;
			text-transform: uppercase;
		}
	}
	.infor-content {
		display: flex;
		flex-direction: column;
		gap: 2rem 0;
		&-wrap {
			display: flex;
			gap: 1.2rem;
			flex-direction: column;
		}
	}
	.input-field {
		color: black;
		display: flex;
		flex-direction: column;
		gap: 1.2rem 0;
		label {
			font-weight: 600;
			font-size: 1.8rem;
			span {
				font-weight: 400;
			}
		}
		input {
			padding: 1.2rem 1.6rem;
			border-radius: .8rem;
			background-color: #dcd3d359;
			border: none;
			font-size: 1.8rem;
			color: black;
			&::placeholder {
				color: rgba(0, 0, 0, 0.25);
			}
		}
	}
	.input-radio {
		&-field {
			position: relative;
			display: flex;
			align-items: center;
			gap: 0 1rem;
			input:checked ~ .fake-radio:before {
				opacity: 1;
				transform: scale(1);
			}
			.fake-radio {
				position: relative;
				width: 1.2rem;
				height: 1.2rem;
				border-radius: 50%;
				border: 2px solid black;
				display: flex;
				align-items: center;
				justify-content: center;
				pointer-events: none;
				&:before {
					content: '';
					position: absolute;
					width: .8rem;
					height: .8rem;
					background: var(--cl-primary);
					border-radius: 50%;
					opacity: 0;
					transform: scale(0);
					transition: all .4s ease-in-out;
				}
			}
			input {
				position: absolute;
				width: 100%;
				height: 100%;
				padding: 0;
				outline: none;
				margin: 0;
				opacity: 0;
			}
			label {
				font-size: 1.6rem;
				pointer-events: none;
			}
		}
	}
	.input-radio-wrap {
		display: flex;
		gap: 1rem;
		flex-direction: column;
	}
	.form-field  {
		margin-top: 7rem;
		padding-inline: 1.2rem;
		display: flex;
		flex-direction: column;
		align-items: center;
		&-ques {
			padding: 2.5rem 3rem;
			background-color: var(--cl-dm-bg);
			border-radius: 2.4rem;
			font-size: 2rem;
			line-height: 1.4em;
			letter-spacing: -.01em;
			font-weight: 600;
			margin-bottom: 6rem;
			.italic {
				font-weight: 400;
				margin-top: 1em;
			}
		}
		&-choice {
			&-listing {
				display: flex;
				align-items: center;
				gap: 0 .8rem;
				margin-bottom: 1.6rem;
				&.mod-txt {
					flex-direction: column;
					gap: .8rem 0;
				}
				&.mod-grid {
					display: grid;
					grid-template-columns: 1fr 1fr;
					gap: 2rem;
					margin-top: 1.4rem;
				}
			}

			&-item {
				position: relative;
				display: flex;
				justify-content: center;
				align-items: center;
				background-color: var(--cl-dm-bg);
				border-radius: 50%;
				input {
					position: absolute;
					width: 100%;
					height: 100%;
					margin: 0;
					opacity: 0;
					&:checked ~ label {
						background-color: var(--cl-primary);
					}
				}
				label {
					font-size: 1.4rem;
					font-weight: 600;
					pointer-events: none;
					width: 4.8rem;
					height: 4.8rem;
					text-align: center;
					position: relative;
					display: flex;
					justify-content: center;
					align-items: center;
					border-radius: 50%;
					transition: background-color .4s ease-in-out;
					&:before {
						content: '';
						position: absolute;
						width: 50%;
						height: 50%;
						border: 2px solid var(--cl-white);
						border-radius: 50%;
					}
				}
				&.mod-txt {
					border-radius: 100vmax;
					align-self: stretch;
					justify-content: start;
					span {
						padding-block: 1.2rem;
						font-size: 1.6rem;
						font-weight: 600;
						margin-left: -4.8rem;
						padding-left: 4.8rem;
						transition: background-color .3s ease-in-out;
						flex: 1;
						border-radius: 100vmax;
						.italic {
							font-weight: 400;
							padding-right: 1.6rem;
						}
					}
					input:checked ~ span {
						background-color: var(--cl-primary);
					}
					label {
						// width: 2.4rem;
						// height: 100%;
					}
					&:before {
						display: none;
					}
				}
				&.mod-grid {
					width: auto;
					height: auto;
					border-radius: 2rem;

					label {
						width: 100%;
						height: 100%;
						display: flex;
						flex-direction: column;
						align-items: start;
						font-size: 1.8rem;
						padding: 2rem 2rem;
						border-radius: 2rem;
						.italic {
							font-weight: 400;
						}
						&:before {
							display: none;
						}
					}
					&:last-child {
						grid-column: 2/3;
					}
				}
			}
			&-desc {
				display: flex;
				justify-content: space-between;

				&-txt {
					font-size: 1.4rem;
					line-height: 1.3em;
					font-weight: 600;
					display: flex;
					flex-direction: column;
					color: black;
					.italic {
						font-weight: 400;
					}
					&:nth-child(2) {
						align-items: end;
					}
				}
			}
		}
	}
	.last-screen {
		color: #000;
		grid-area: 1/1/3/2;
		.container {
			height: 100%;
		}

		&-wrap {

		}
		&-title {
			grid-area: 1/1/2/2;
			font-size: 2rem;
			font-weight: 600;
			line-height: 1.4em;
			letter-spacing: -.001em;
			display: flex;
			flex-direction: column;
			// padding: 4.4rem 5.2rem;
			text-align: center;
			transition: opacity .4s ease-in-out;
			width: 100%;
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
		}
		&-head {
			display: flex;
			align-items: center;
			justify-content: center;
			padding-top: 10vh;
		}
		&-img {
			&:first-child {
				width: 20rem;
				margin-left: -4rem;
			}
			&:last-child {
				width: 12rem;
				margin-left: -2rem;
			}
		}
	}
</style>
<script is:inline>
	const data = [
  {
    "question": "Hành trình Di sản của SABECO khởi đầu từ năm nào?",
    "answer": "1875",
    "options": ["1871", "1875", "1877"]
  },
  {
    "question": "Năm 2020, SABECO chạm mốc bao nhiêu lít bia hàng năm?",
    "answer": "1 tỷ",
    "options": ["100 triệu", "1 tỷ", "2 tỷ"]
  },
  {
    "question": "Năm 2025 đánh dấu cột mốc bao nhiêu năm di sản của SABECO?",
    "answer": "150",
    "options": ["140", "145", "150"]
  },
  {
    "question": "Chuyến xe Hành Trình Di Sản của SABECO sẽ đi qua bao nhiêu địa điểm?",
    "answer": "9",
    "options": ["8", "9", "10"]
  },
  {
    "question": "SABECO hiện có bao nhiêu thợ nấu bia là người Việt Nam?",
    "answer": "46",
    "options": ["46", "42", "40"]
  },
  {
    "question": "SABECO đạt bao nhiêu huy chương quốc tế về chất lượng bia từ năm 2018 đến nay?",
    "answer": "54",
    "options": ["51", "53", "54"]
  },
  {
    "question": "Đâu là sáng kiến cộng đồng SABECO từng thực hiện trong 3 năm vừa qua?",
    "answer": "Thắp sáng đường quê",
    "options": ["Thắp sáng đường quê", "Đem điện lên bản", "Lọc nước miền quê"]
  },
  {
    "question": "Thông điệp được chia sẻ tại khu vực Gìn giữ và Trách nhiệm (ESG) là gì?",
    "answer": "Cam kết trách nhiệm với cộng đồng, môi trường và tương lai của SABECO",
    "options": [
      "Cam kết trách nhiệm với cộng đồng, môi trường và tương lai của SABECO",
      "Cam kết tiết kiệm điện",
      "Cam kết đồng hành cùng sự phát triển của Việt Nam"
    ]
  },
  {
    "question": "Nguyên liệu làm bia bao gồm những gì?",
    "answer": "Mạch nha, hoa bia, men và nước",
    "options": [
      "Mạch nha, hoa bia, men và nước",
      "Mạch nha, men và nước",
      "Mạch nha, hương liệu, men và nước"
    ]
  },
  {
    "question": "Từ năm 2018 đến nay, SABECO sở hữu bao nhiêu thương hiệu bia?",
    "answer": "3",
    "options": ["2", "3", "4"]
  },
  {
    "question": "Điểm đến cuối cùng của Hành Trình Di Sản và Đêm Di sản của SABECO là ở đâu?",
    "answer": "Hà Nội",
    "options": ["Hà Nội", "Nghệ An", "Bình Định"]
  },
  {
    "question": "SABECO có bao nhiêu nhà máy trên toàn quốc?",
    "answer": "25",
    "options": ["24", "25", "26"]
  },
  {
    "question": "Một trong các nguyên tắc thưởng thức có trách nhiệm là gì?",
    "answer": "Tôn trọng sự lựa chọn của người khác, không ép uống",
    "options": [
      "Tôn trọng sự lựa chọn của người khác, không ép uống",
      "Uống thoải mái, miễn không lái xe sau khi uống bia là được",
      "Uống để vui vẻ, giải tỏa căng thẳng cho bản thân"
    ]
  },
  {
    "question": "Uống rượu/bia có thể ảnh hưởng như thế nào đến khả năng lái xe?",
    "answer": "Ảnh hưởng đến khả năng tập trung, phản xạ và ra quyết định khi tham gia giao thông.",
    "options": [
      "Không ảnh hưởng nếu chỉ uống một lượng nhỏ.",
      "Ảnh hưởng đến khả năng tập trung, phản xạ và ra quyết định khi tham gia giao thông.",
      "Giúp tăng sự tự tin khi lái xe."
    ]
  },
  {
    "question": "Sau khi uống bia, lựa chọn nào sau đây là tốt nhất để đảm bảo an toàn khi về nhà?",
    "answer": "Sử dụng dịch vụ gọi xe hoặc nhờ người không uống rượu/bia lái hộ.",
    "options": [
      "Tự lái xe nếu bạn vẫn cảm thấy tỉnh táo.",
      "Sử dụng dịch vụ gọi xe hoặc nhờ người không uống rượu/bia lái hộ.",
      "Đi bộ về nhà."
    ]
  }
]

	function shuffleArray(array) {
		for (let i = array.length - 1; i > 0; i--) {
			const j = Math.floor(Math.random() * (i + 1));
			[array[i], array[j]] = [array[j], array[i]];
		}
		return array;
	}

	const alreadyAskedQuestions = [];
	let correctAnswers = 0;
	let currentQuestionIndex = 0;
	let currStep = 1;
	let lastStep = 4;

    function showResult(message) {
		document.querySelector('.last-screen-title-txt').innerHTML = message;
    }

	function createNewQuestion(data) {
		// Get available questions that haven't been asked yet
		const availableQuestions = data.filter(q => !alreadyAskedQuestions.includes(q));

		// If no questions are left or we've asked 3 questions, end the game
		if (availableQuestions.length === 0 || currentQuestionIndex >= 3) {
			if (correctAnswers >= 2) {
				showResult('Chúc mừng bạn đã giành được<br/>cơ hội tham gia Hành Trình Di Sản!');
			} else {
				showResult('Chúc bạn may mắn lần sau');
			}
			return;
		}

		// Get random question from available questions
		const randomIndex = Math.floor(Math.random() * availableQuestions.length);
		const question = availableQuestions[randomIndex];

		// Add to asked questions list
		alreadyAskedQuestions.push(question);

		// Display question
		document.querySelector('.third-screen-ques').innerHTML = question.question;

		// Shuffle options
		let options = shuffleArray([...question.options]);

		// Reuse existing <li> elements
		const answerElements = document.querySelectorAll('.third-screen-ans li');
		answerElements.forEach((element, index) => {
			// Reset element
			element.classList.remove('selected', 'correct', 'incorrect');
			element.removeAttribute('data-answer');
			element.innerHTML = options[index];
			document.querySelector('.third-screen-ans').style.pointerEvents = 'auto';

			// Set correct answer attribute
			if (options[index] === question.answer) {
				element.setAttribute('data-answer', 'true');
			}

			// Remove existing event listeners by cloning the element
			const newElement = element.cloneNode(true);
			element.parentNode.replaceChild(newElement, element);

			// Add new event listener
			newElement.addEventListener('click', function handleAnswer() {
				// Disable further clicks
				newElement.classList.add('selected');

				// Check if answer is correct
				if (newElement.getAttribute('data-answer') === 'true') {
					correctAnswers++;
				}
				document.querySelector('.third-screen-ans').style.pointerEvents = 'none';

				// Highlight correct and incorrect answers
				setTimeout(() => {
					newElement.closest('ol').querySelectorAll('li').forEach(el => {
						if (el.getAttribute('data-answer') === 'true') {
							el.classList.add('correct');
						} else {
							el.classList.add('incorrect');
						}
					});
				}, 1000);

				// Handle game logic after a delay
				setTimeout(() => {
					if (currentQuestionIndex === 1) { // After second question
						if (correctAnswers === 2) {
							showResult('Chúc mừng bạn đã giành được<br/>cơ hội tham gia Hành Trình Di Sản!');
							currStep++;
							updateScreen();
							return;
						} else if (correctAnswers === 0) {
							showResult('Chúc bạn may mắn lần sau!');
							currStep++;
							updateScreen();
							return;
						}
					}

					// Move to next question
					currentQuestionIndex++;
					if (currentQuestionIndex < 3) {
						createNewQuestion(data);
					} else {
						currStep++;
						updateScreen();
						if (correctAnswers >= 2) {
							showResult('Chúc mừng bạn đã giành được<br/>cơ hội tham gia Hành Trình Di Sản!');
						} else {
							showResult('Chúc bạn may mắn lần sau!');
						}
					}
				}, 2000);
			}, { once: true }); // Ensure event listener triggers only once
		});
	}
	createNewQuestion(data);

	const updateScreen = () => {
		document.querySelectorAll('[data-step]').forEach(step => {
			if (step.getAttribute('data-step') == currStep) {
				step.classList.add('active');
			}
			else {
				step.classList.remove('active');
			}
		})
		document.querySelector('.form').classList[(currStep == 2) ? 'add' : 'remove']('active')
	}

	document.querySelector('.btn-start').addEventListener('click', function (e) {
		e.preventDefault();
		currStep++;
		updateScreen();
	})
	// document.querySelector('.btn-submit').addEventListener('click', function (e) {
	// 	e.preventDefault();
	// 	currStep++;
	// 	updateScreen();
	// })

	const DEPLOYMENTURI = 'AKfycbz0DR38e1PuQ8XLxZFA5RzxzBKOdgWWJaHOfBTlbrEFJgKelFh86RnXtAk7k-LPDQFl';
	const form = document.querySelector("#form");
	const submitButton = document.querySelector("#submit");
	form?.addEventListener("submit", async function(event) {
		event.preventDefault();
		const formData = new FormData(form);
		const data = Object.fromEntries(formData);
		currStep++;
		updateScreen();

		try {
			const response = await fetch(`https://script.google.com/macros/s/${DEPLOYMENTURI}/exec`, {
				method: "POST",
				body: new URLSearchParams(data)
			});
			const responseText = await response.text();
			form.reset();
		}
		catch (error) {
			alert(error);
		}
	});
</script>
